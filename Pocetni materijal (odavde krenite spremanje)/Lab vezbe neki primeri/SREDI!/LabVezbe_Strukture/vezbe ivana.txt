{\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{\f0\froman\fcharset0 Times New Roman;}{\f1\fswiss\fcharset0 Arial;}}
\viewkind4\uc1\pard\sb100\sa100\f0\fs24 //v2cpp//\par
\line StaticList::StaticList(int n)\line\{\line max=n;\line link=new int [n];\line info=new int [n];\line info[0]=1;\line for(int i=1;i<n-1;i++)\line link[i]=i+1;\line link[n-1]=0;\line\}\par
StaticList::~StaticList()\line\{\line delete [] link;\line delete [] info;\line max=0;\line\}\par
void StaticList::Dodaj(int k)\line\{\line if(info[0]==max)\line cout<<"Ne mozete uneti novi element posto je lista vec puna"<<endl;\line else\line\{\line info[info[0]]=k;\line link[info[0]]=0;\line if(info[0]==1)\line link[0]=1;\line else\line\{\line int tekuci=link[0];\line while(link[tekuci]!=0)\line tekuci=link[tekuci];\line link[tekuci]=info[0];\line\}\line info[0]++;\line\}\line\}\par
void StaticList::Stampaj()\line\{\line if(info[0]==1)\line cout<<"Lista je prazna"<<endl;\line else\line\{\line int tekuci=link[0];\line while(tekuci!=0)\line\{\line cout<<info[tekuci]<<endl;\line tekuci=link[tekuci];\line\}\line\}\line\}\par
int StaticList::LinkPretMin(int poc)\line\{\line int prethodnimin=poc;\line int prethodni=poc, min=info[link[poc]],tekuci=link[poc];\line while(tekuci!=0)\line\{\line if(info[tekuci]<min)\line\{\line min=info[tekuci];\line prethodnimin=prethodni;\line\}\line prethodni=tekuci;\line tekuci=link[tekuci];\line\}\line return prethodnimin;\line\}\par
\line void StaticList::SSort()\line\{\line int min,postmin,pretmin,prethodni;\line pretmin=LinkPretMin(link[0]);\line min=link[pretmin];\line postmin=link[min];\line link[min]=link[0];\line link[0]=min;\line link[pretmin]=postmin ;\line prethodni=min;\line while(link[prethodni]!=0)\line\{\line pretmin=LinkPretMin(prethodni);\line min=link[pretmin];\line postmin=link[min];\line if(pretmin!=prethodni)\line\{\line link[min]=link[prethodni];\line link[prethodni]=min;\line link[pretmin]=postmin;\line\}\line prethodni=min;\line\}\line\}\par
\line void main()\line\{\line int n,s=0;\line cout<<"Unesite maksimalan broj elemenata lancane liste"<<endl;\line cin>>n;\line StaticList L(n);\line while(s!=4)\line\{\line cout<<"Unesite:"<<endl;\line cout<<"1 ako zelite da dodate element listi"<<endl;\line cout<<"2 ako zelite da odstampate listu"<<endl;\line cout<<"3 ako zelite da sortirate listu"<<endl;\line cout<<"4 ako zelite da izadjete iz programa"<<endl;\line cin>>s;\line switch(s)\line\{\line case 1:\line\{\line cout<<"Unesite zeljeni element"<<endl;\line cin>>n;\line L.Dodaj(n);\line break;\line\}\line case 2:\line\{\line L.Stampaj();\line break;\line\}\line case 3:\line\{\line L.SSort();\line break;\line\}\line\}\line\}\line\}\par
//v2java//\par
\line class Lista\line\{\line int [] Link;\line int [] Info;\line int max;\line\}\par
public class Class1\line\{\line protected Lista SL;\line\line public void Postavi(int n)\line\{\line SL=new Lista();\line SL.max=n;\line SL.Link=new int[n];\line SL.Info=new int[n];\line SL.Info[0]=1;\line\}\line\line public void Unesi(int k)\line\{\line if(SL.Info[0]==SL.max)\line System.out.println("Nemozete uneti novi element posto je lista vec puna");\line else\line\{\line SL.Info[SL.Info[0]]=k;\line SL.Link[SL.Info[0]]=0;\line if(SL.Info[0]==1)\line\{\line SL.Link[0]=1;\line\}\line else\line\{\line int tekuci=SL.Link[0];\line while(SL.Link[tekuci]!=0)\line\{\line tekuci=SL.Link[tekuci];\line\}\line SL.Link[tekuci]=SL.Info[0];\line\}\line SL.Info[0]++;\line\}\line\}\line\line public void Stampaj()\line\{\line if(SL.Info[0]==1)\line System.out.println("Lista je prazna");\line else\line\{\line int tekuci=SL.Link[0];\line while(tekuci!=0)\line\{\line System.out.println(SL.Info[tekuci]);\line tekuci=SL.Link[tekuci];\line\}\line\}\line\}\line\line public int LinkPretMin(int poc)\line\{\line int prethodnimin=poc;\line int prethodni=poc,min=SL.Info[SL.Link[poc]],tekuci=SL.Link[poc];\line while(tekuci!=0)\line\{\line if(SL.Info[tekuci]<min)\line\{\line min=SL.Info[tekuci];\line prethodnimin=prethodni;\line\}\line prethodni=tekuci;\line tekuci=SL.Link[tekuci];\line\}\line return prethodnimin;\line\}\line\line public void SSort()\line\{\line int min,postmin,pretmin,prethodni;\line pretmin=LinkPretMin(SL.Link[0]);\line min=SL.Link[pretmin];\line postmin=SL.Link[min];\line\line SL.Link[min]=SL.Link[0];\line SL.Link[0]=min;\line\line SL.Link[pretmin]=postmin;\line\line prethodni=min;\line\line while(SL.Link[prethodni]!=0)\line\{\line pretmin=LinkPretMin(prethodni);\line min=SL.Link[pretmin];\line postmin=SL.Link[min];\line\line if(pretmin!=prethodni)\line\{ \line SL.Link[min]=SL.Link[prethodni];\line SL.Link[prethodni]=min;\line SL.Link[pretmin]=postmin;\line\}\line\line prethodni=min;\line\line\}\line\}\line\line\line public static void main (String[] args)\line\{\line Class1 L;\line L=new Class1();\line L.Postavi(10);\line L.Unesi(3);\line L.Unesi(-2);\line L.Unesi(5);\line L.Unesi(1);\line L.Unesi(-19);\line L.Unesi(15);\line L.Unesi(-13);\line L.Unesi(11);\line System.out.println("Ovako izgleda lista pre sortiranja");\line L.Stampaj();\line L.SSort();\line System.out.println("Ovako izgleda lista nakon sortiranja");\line L.Stampaj();\line\}\line\}\par
//v3cpp//\par
#include<iostream.h>\par
template <class tip>\line struct Element\line\{\line Element<tip> *prethodni;\line Element<tip> *sledeci;\line tip info;\line\};\par
template <class tip>\line class DinamickiDek\line\{\line protected:\line Element<tip> *LeviKraj;\line Element<tip> *DesniKraj;\line Element<tip> *LRMP;\par
public:\line DinamickiDek(int n);\line ~DinamickiDek();\par
void DodajLevo(tip podatak);\line void DodajDesno(tip podatak);\line void ObrisiLevo();\line void ObrisiDesno();\line void Stampaj(int n);\line\};\par
template<class tip>\line DinamickiDek<tip>::DinamickiDek(int n)\line\{\line Element<tip> *tekuci,*prethodni;\line tekuci=new Element<tip>;\line tekuci->prethodni=NULL;\line tekuci->sledeci=NULL;\line LeviKraj=NULL;\line DesniKraj=NULL;\line LRMP=tekuci;\line prethodni=tekuci;\line for(int i=1;i<n-1;i++)\line\{\line tekuci=new Element<tip>;\line tekuci->prethodni=prethodni;\line tekuci->sledeci=NULL;\line prethodni->sledeci=tekuci;\line prethodni=tekuci;\line\}\line\}\par
\line template<class tip>\line DinamickiDek<tip>::~DinamickiDek()\line\{\line Element<tip> *prethodni,*tekuci;\line tekuci=LeviKraj;\line while(tekuci!=NULL)\line\{\line prethodni=tekuci;\line tekuci=tekuci->sledeci;\line delete prethodni;\line\}\line tekuci=LRMP;\line while(tekuci!=NULL)\line\{\line prethodni=tekuci;\line tekuci=tekuci->sledeci;\line delete prethodni;\line\}\line\}\par
template<class tip>\line void DinamickiDek<tip>::DodajLevo(tip podatak)\line\{\line Element<tip> *novi;\line if(LRMP==NULL)\line cout<<"Ne mozete dodati novi element posto je dek vec pun"<<endl;\line else\line\{\line novi=LRMP;\line LRMP=LRMP->sledeci;\line LRMP->prethodni=NULL;\line novi->sledeci=LeviKraj;\line novi->info=podatak;\line if(LeviKraj==NULL)\line DesniKraj=novi;\line else\line LeviKraj->prethodni=novi;\line LeviKraj=novi;\line\}\line\}\par
\line template<class tip>\line void DinamickiDek<tip>::DodajDesno(tip podatak)\line\{\line Element<tip> *novi;\line if(LRMP==NULL)\line cout<<"Ne mozete dodati novi element posto je dek vec pun"<<endl;\line else\line\{\line novi=LRMP;\line LRMP=LRMP->sledeci;\line LRMP->prethodni=NULL;\line novi->sledeci=NULL;\line novi->prethodni=DesniKraj;\line novi->info=podatak;\line if(DesniKraj==NULL)\line LeviKraj=novi;\line else\line DesniKraj->sledeci=novi;\line DesniKraj=novi;\line\}\line\}\par
template<class tip>\line void DinamickiDek<tip>::ObrisiLevo()\line\{\line Element<tip> *stari;\line if(LeviKraj==NULL)\line cout<<"Ne mozete obrisati element zato sto je dek prazan"<<endl;\line else\line\{\line stari=LeviKraj;\line if(LeviKraj==DesniKraj)\line DesniKraj=NULL;\line LeviKraj=LeviKraj->sledeci;\line LeviKraj->prethodni=NULL;\line LRMP->prethodni=stari;\line stari->sledeci=LRMP;\line LRMP=stari;\line\}\line\}\par
template<class tip>\line void DinamickiDek<tip>::ObrisiDesno()\line\{\line Element<tip> *stari;\line if(DesniKraj==NULL)\line cout<<"Ne mozete obrisati element zato sto je dek prazan"<<endl;\line else\line\{\line stari=DesniKraj;\line if(LeviKraj==DesniKraj)\line LeviKraj=NULL;\line DesniKraj=DesniKraj->prethodni;\line DesniKraj->sledeci=NULL;\line LRMP->prethodni=stari;\line stari->sledeci=LRMP;\line stari->prethodni=NULL;\line LRMP=stari;\line\}\line\}\par
template<class tip>\line void DinamickiDek<tip>::Stampaj(int n)\line\{\line Element<tip> *tekuci;\line if(LeviKraj==NULL)\line\{\line cout<<"Dek je prazan"<<endl;\line\}\line else\line\{\line switch(n)\line\{\line case 1:\line\{\line tekuci=LeviKraj;\line while(tekuci!=NULL)\line\{\line cout<<tekuci->info<<endl;\line tekuci=tekuci->sledeci;\line\}\line break;\line\}\line case 2:\line\{\line tekuci=DesniKraj;\line while(tekuci!=NULL)\line\{\line cout<<tekuci->info<<endl;\line tekuci=tekuci->prethodni;\line\}\line break;\line\}\line\}\line\}\line\}\par
\line void main()\line\{\line int n,q,s=0,p1;\line char p2;\line cout<<"Unesite maksimalni broj elemenata deka"<<endl;\line cin>>n;\line DinamickiDek<int> I(n);\line DinamickiDek<char> C(n);\line n=0;\line while(n==0) \line\{\line cout<<"Unesite 1 ako zelite da radite sa celobrojnim podacima ili 2 ako zelite da radite sa karakterima"<<endl;\par
cin>>n;\line if(n!=1 && n!=2)\line\{\line n=0;\line cout<<"Greska. Pokusajte ponovo"<<endl;\line\}\line\}\line while(s!=4)\line\{\line cout<<"Unesite:"<<endl;\line cout<<"1 ako zelite da unesete novi element u dek"<<endl;\line cout<<"2 ako zelite da izbacite neki element iz deka"<<endl;\line cout<<"3 ako zelite da odstampate sadrzaj deka"<<endl;\line cout<<"4 ako zelite da izadjete iz programa"<<endl;\line cin>>s;\line switch(s)\line\{\line case 1:\line\{\line q=0;\line while(q==0)\line\{\line cout<<"Unesite 1 ako zelite da dodate element sa leve, a 2 ako zelite da dodate element sa desne strane u dek"<<endl;\line cin>>q;\line if(q!=1 && q!=2)\line\{\line cout<<"Greska. Pokusajte ponovo"<<endl;\line q=0;\line\}\line\}\line if(n==1)\line\{\line cout<<"Unesite ceo broj"<<endl;\line cin>>p1;\line if(q==1)\line I.DodajLevo(p1);\line else\line I.DodajDesno(p1);\line\}\line else\line\{\line cout<<"Unesite jedan karakter"<<endl;\line cin>>p2;\line if(q==1)\line C.DodajLevo(p2);\line else\line C.DodajDesno(p2);\line\}\line break;\par
\}\line case 2:\line\{\line q=0;\line while(q==0)\line\{\line cout<<"Unesite 1 ako zelite da izbacite element sa levog, a 2 ako zelite da izbacite element sa desnog kraja deka"<<endl;\line cin>>q;\line if(q!=1 && q!=2)\line\{\line cout<<"Greska. Pokusajte ponovo"<<endl;\line q=0;\line\}\line\}\line if(n==1)\line\{\line if(q==1)\line I.ObrisiLevo();\line else\line I.ObrisiDesno();\line\}\line else\line\{\line if(q==1)\line C.ObrisiLevo();\line else\line C.ObrisiDesno();\line\}\line break;\par
\}\line case 3:\line\{\par
q=0;\line while(q==0)\line\{\line cout<<"Unesite 1 ako zelite da stampate sadrzaj deka pocevsi od levog, a 2 ako zelite da stampate sadrzaj deka pocevsi od desnog kraja deka"<<endl;\line cin>>q;\line if(q!=1 && q!=2)\line\{\line cout<<"Greska. Pokusajte ponovo"<<endl;\line q=0;\line\}\line\}\line if(n==1)\line\{\line I.Stampaj(q);\line\}\line else\line\{\line C.Stampaj(q);\line\}\line break;\line\}\line case 4:\line\{\line break;\line\}\line default:\line\{\line cout<<"Greska. Pokusajte ponovo"<<endl;\line break;\line\}\line\}\line\}\line\}\par
//v3java//\par
class Element\line\{\line Element prethodni;\line Element sledeci;\line int info;\line\};\par
public class Class1\line\{\line protected Element LeviKraj;\line protected Element DesniKraj;\line protected Element LRMP;\line\line public void Postavi(int n)\line\{\line Element tekuci,prethodni;\line tekuci=new Element();\line tekuci.prethodni=null;\line tekuci.sledeci=null;\line LeviKraj=null;\line DesniKraj=null;\line LRMP=tekuci;\line prethodni=tekuci;\line for(int i=1;i<n-1;i++)\line\{\line tekuci=new Element();\line tekuci.prethodni=prethodni;\line tekuci.sledeci=null;\line prethodni.sledeci=tekuci;\line prethodni=tekuci;\line\}\line\}\line\line public void DodajLevo(int podatak)\line\{\line Element novi;\line if(LRMP==null)\line System.out.println("Ne mozete dodati novi element posto je dek vec pun");\line else\line\{\line novi=LRMP;\line LRMP=LRMP.sledeci;\line LRMP.prethodni=null;\line novi.sledeci=LeviKraj;\line novi.info=podatak;\line if(LeviKraj==null)\line DesniKraj=novi;\line else\line LeviKraj.prethodni=novi;\line LeviKraj=novi;\line\}\line\}\line\line public void DodajDesno(int podatak)\line\{\line Element novi;\line if(LRMP==null)\line System.out.println("Ne mozete dodati novi element posto je dek vec pun");\line else\line\{\line novi=LRMP;\line LRMP=LRMP.sledeci;\line LRMP.prethodni=null;\line novi.sledeci=null;\line novi.prethodni=DesniKraj;\line novi.info=podatak;\line if(DesniKraj==null)\line LeviKraj=novi;\line else\line DesniKraj.sledeci=novi;\line DesniKraj=novi;\line\}\line\}\line\line public void ObrisiLevo()\line\{\line Element stari;\line if(LeviKraj==null)\line System.out.println("Ne mozete obrisati element zato sto je dek prazan");\line else\line\{\line stari=LeviKraj;\line if(LeviKraj==DesniKraj)\line DesniKraj=null;\line LeviKraj=LeviKraj.sledeci;\line LeviKraj.prethodni=null;\line LRMP.prethodni=stari;\line stari.sledeci=LRMP;\line LRMP=stari;\line\}\line\}\line\line public void ObrisiDesno()\line\{\line Element stari;\line if(DesniKraj==null)\line System.out.println("Ne mozete obrisati element zato sto je dek prazan");\line else\line\{\line stari=DesniKraj;\line if(LeviKraj==DesniKraj)\line LeviKraj=null;\line DesniKraj=DesniKraj.prethodni;\line DesniKraj.sledeci=null;\line LRMP.prethodni=stari;\line stari.sledeci=LRMP;\line stari.prethodni=null;\line LRMP=stari;\line\}\line\}\line\line public void Stampaj(int n)\line\{\line Element tekuci;\line if(LeviKraj==null)\line\{\line System.out.println("Dek je prazan");\line\}\line else\line\{\line switch(n)\line\{\line case 1:\line\{\line tekuci=LeviKraj;\line while(tekuci!=null)\line\{\line System.out.println(tekuci.info);\line tekuci=tekuci.sledeci;\line\}\line break;\line\}\line case 2:\line\{\line tekuci=DesniKraj;\line while(tekuci!=null)\line\{\line System.out.println(tekuci.info);\line tekuci=tekuci.prethodni;\line\}\line break;\line\}\line\}\line\}\line\}\line\line\line public static void main (String[] args)\line\{\line int n;\line Class1 Dek;\line Dek=new Class1();\line System.out.println("Ovo je prezentacija rada sa dekom");\line Dek.Postavi(10);\line Dek.Stampaj(1);\line System.out.println("Unecemo u dek elemente 2 i 1 sa leve strane, i 3 i 4 sa desne strane. Sada je sadrzaj naseg deka, odstampan sa leve strane sledeci:");\line Dek.DodajLevo(2);\line Dek.DodajLevo(1);\line Dek.DodajDesno(3);\line Dek.DodajDesno(4);\line Dek.Stampaj(1);\line System.out.println("Sada cemo iz deka izbaciti prvi element sa leve i prvi element sa desne strane i odstampati dek sa desne strane");\line Dek.ObrisiLevo();\line Dek.ObrisiDesno();\line Dek.Stampaj(2);\line\}\line\line\}\par
\pard\f1\fs20\par
}
 